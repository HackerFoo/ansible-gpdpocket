---
- include: host/arch.yml
  when: ansible_distribution == 'Antergos' or ansible_distribution == 'Archlinux' or ansible_distribution == 'Manjaro Linux'

- include: host/debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Kali' or ansible_distribution == 'Linuxmint' or ansible_distribution == 'Ubuntu'

- include: host/fedora.yml
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora' or ansible_distribution == 'RedHat'
  
- include: host/gentoo.yml
  when: ansible_distribution == 'Gentoo'

- name: clean any leftover mounts from previous run
  shell: umount -lf /var/tmp/bootstrap-iso/squashfs
  failed_when: false
  tags:
  - iso

- name: remove working directory from previous run
  file:
    path: /var/tmp/bootstrap-iso
    state: absent
  tags:
  - iso

- name: create working directory
  file:
    path: /var/tmp/bootstrap-iso
    state: directory
  tags:
  - iso

- name: check if iso file exists
  stat:
    path: "{{ iso }}"
  register: iso_check
  tags:
  - iso
  
- name: fail if iso file does not exist
  fail: msg="The ISO file you specified ({{ iso }}) does not exist."
  when: iso_check.stat.islnk is not defined
  tags:
  - iso

- name: extract iso to working directory
  shell: xorriso -osirrox on -indev "{{ iso }}" -extract / /var/tmp/bootstrap-iso
  tags:
  - iso

- name: find squashfs image
  find:
    path: /var/tmp/bootstrap-iso
    recurse: yes
    use_regex: yes
    patterns: '.*(squashfs\.img|\.sfs|\.squashfs)$'
    file_type: file
  register: squashfs
  tags:
  - iso

- name: extract squashfs image
  shell: "unsquashfs -d /var/tmp/bootstrap-iso/squashfs/ -f {{ squashfs.files.0.path }}"
  tags:
  - iso

- name: find rootfs image
  find:
    path: /var/tmp/bootstrap-iso/squashfs
    recurse: yes
    patterns: 'rootfs.img'
    file_type: file
  register: rootfs
  tags:
  - iso

- name: mount rootfs (when rootfs exists)
  shell: mount -t ext4 -o loop,rw {{ rootfs.files.0.path }} /var/tmp/bootstrap-iso/squashfs
  args:
    warn: false
  when: rootfs.matched > 0
  tags:
  - iso

- name: bind mount squashfs to allow chroot (when rootfs does not exist)
  shell: mount --bind /var/tmp/bootstrap-iso/squashfs /var/tmp/bootstrap-iso/squashfs
  args:
    warn: false
  when: rootfs.matched == 0
  tags:
  - iso

- name: check if resolv.conf exists
  stat:
    path: /var/tmp/bootstrap-iso/squashfs/etc/resolv.conf
  register: resolvconf
  tags:
  - iso

- name: backup guest resolv.conf
  copy:
    src: /var/tmp/bootstrap-iso/squashfs/etc/resolv.conf
    dest: /var/tmp/bootstrap-iso/squashfs/etc/resolv.conf.bak
  when: resolvconf.stat.islnk is defined
  tags:
  - iso

- name: copy bootstrap resolv.conf to guest
  copy:
    src: files/resolv.conf
    dest: /var/tmp/bootstrap-iso/squashfs/etc/resolv.conf
  tags:
  - iso

- name: mount essential devices to guest
  shell: |
    mount --bind /dev /var/tmp/bootstrap-iso/squashfs/dev
    mount -t tmpfs -o nosuid,nodev,noexec shm /var/tmp/bootstrap-iso/squashfs/dev/shm
    chmod 1777 /var/tmp/bootstrap-iso/squashfs/dev/shm
    mount -t proc none /var/tmp/bootstrap-iso/squashfs/proc
  args:
    warn: false
  tags:
  - iso

- name: copy bootstrap-system script to guest
  copy:
    src: ../../bootstrap-system.sh
    dest: /var/tmp/bootstrap-iso/squashfs/tmp/bootstrap-system.sh
  tags:
  - iso

- name: bootstrap guest (this may take a while)
  shell: chroot /var/tmp/bootstrap-iso/squashfs /bin/bash -c "/bin/bash /tmp/bootstrap-system.sh"
  register: bootstrapsystem
  tags:
  - iso

- name: print output (for issue resolution purposes)
  debug: msg="{{ bootstrapsystem.stdout_lines }}"
  tags:
  - iso

- name: umount leftover partitions
  shell: umount -lf /var/tmp/bootstrap-iso/squashfs
  tags:
  - iso

- name: remove bootstrap resolv.conf from guest
  file:
    path: /var/tmp/bootstrap-iso/etc/resolv.conf
    state: absent
  tags:
  - iso

- name: restore resolv.conf backup on guest
  copy:
    src: /var/tmp/bootstrap-iso/squashfs/etc/resolv.conf.bak
    dest: /var/tmp/bootstrap-iso/squashfs/etc/resolv.conf
  failed_when: false
  tags:
  - iso

- name: remove leftover files from guest
  file:
    name: "{{ item }}"
    state: absent
  with_items:
  - /var/tmp/bootstrap-iso/squashfs/usr/src/ansible-gpdpocket
  - /var/tmp/bootstrap-iso/squashfs/tmp/bootstrap-system.sh

- include: guest/arch.yml
  when: ( iso | lower | search('antergos') ) or ( iso | lower | search('archlinux') ) or ( iso | lower | search('manjaro') )

- include: guest/debian.yml
  when: ( iso | lower | search('debian') ) or ( iso | lower | search('kali') ) or ( iso | lower | search('linuxmint') or ( iso | lower | search('ubuntu') )

- include: guest/fedora.yml
  when: ( iso | lower | search('centos') ) or ( iso | lower | search('fedora') ) or ( iso | lower | search('redhat') )
  
- include: guest/gentoo.yml
  when: iso | lower | search('gentoo')